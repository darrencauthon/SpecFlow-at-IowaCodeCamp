// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace MvcApplication1.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Promotion")]
    public partial class PromotionFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Promotion.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Promotion", "In order to get free prizes\r\nAs the customer\r\nI want to enter my promotion code a" +
                    "nd see if I\'ve won", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Customer enters a winning code")]
        public virtual void CustomerEntersAWinningCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Customer enters a winning code", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "FirstName",
                        "John"});
            table1.AddRow(new string[] {
                        "LastName",
                        "Galt"});
            table1.AddRow(new string[] {
                        "Email",
                        "test@testing.com"});
            table1.AddRow(new string[] {
                        "PromotionCode",
                        "test1234"});
#line 7
testRunner.Given("I entered the following values into the promotion form", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PromotionCode",
                        "Prize"});
            table2.AddRow(new string[] {
                        "test1234",
                        "A free coke."});
#line 13
testRunner.And("the following promotions exist", ((string)(null)), table2);
#line 16
testRunner.When("I submit my promotion form");
#line 17
testRunner.Then("I should be sent to the Confirmation page");
#line 18
testRunner.And("the prize name \'A free coke.\' should be passed to the next page");
#line 19
testRunner.And("the name \'John Galt\' and the email \'test@testing.com\' and the promotion code \'tes" +
                    "t1234\' should be passed to the prize winning recorder");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Customer enters a non-winning code")]
        public virtual void CustomerEntersANon_WinningCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Customer enters a non-winning code", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "PromotionCode",
                        "a failing code"});
#line 22
testRunner.Given("I entered the following values into the promotion form", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PromotionCode",
                        "Prize"});
            table4.AddRow(new string[] {
                        "test1234",
                        "A free coke."});
#line 25
testRunner.And("the following promotions exist", ((string)(null)), table4);
#line 28
testRunner.When("I submit my promotion form");
#line 29
testRunner.Then("I should be sent to the Failure page");
#line 30
testRunner.And("my information should not be recorded as a win");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
